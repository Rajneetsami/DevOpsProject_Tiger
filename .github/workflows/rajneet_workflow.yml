name: Test and Build Flask App for OpenWeatherMap

on:
  workflow_dispatch:
    inputs:
      log_errors:
        description: 'Enable error logging'
        required: false
        default: 'false'

jobs:
  test-job:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11.5'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Install pytest
        run: |
          pip install pytest  # Ensure pytest is installed
      - name: Run Unit Tests
        run: |
          pytest unittest_Rajneet.py
        env:
          GREETING: "Running unit tests for application logic"
          OPENWEATHERMAP_API_KEY: ${{ secrets.API_KEY_RAJNEET }}  # API Key from Secrets
          
      - name: Run Integration Tests
        run: |
          pytest integrationtest_Rajneet.py
        env:
          OPENWEATHERMAP_API_KEY: ${{ secrets.API_KEY_RAJNEET }}  # API Key from Secrets

      - name: Confirm Test Output
        run: |
          echo "$GREETING"
          export EXPECTED_RESULT="All tests passed"
          echo "Expected Result: $EXPECTED_RESULT"
          
      - name: Generate Error Log (if log_errors is true)
        if: ${{ github.event.inputs.log_errors == 'true' }}
        run: |
          if [ $? -ne 0 ]; then
            echo "Tests failed, generating error log..." > error_log.txt
            echo "Unit Tests and Integration Tests failed" >> error_log.txt
            # Optionally, upload the error log as an artifact
            echo "Uploading error log as artifact"
            mkdir -p error_logs
            mv error_log.txt error_logs/
          fi

  build-job:
    runs-on: ubuntu-latest
    needs: test-job
    if: success()  # Only runs if the test-job was successful
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install Dependencies for Flask App
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Run Flask App
        run: |
          export FLASK_APP=your_flask_app.py  # Make sure to set the entry point
          export FLASK_ENV=development
          flask run --host=0.0.0.0 --port=5000 &
        env:
          OPENWEATHERMAP_API_KEY: ${{ secrets.API_KEY_RAJNEET }}  # API Key from Secrets

      - name: Confirm Build Status
        run: |
          echo "Flask application is running"
          echo "Build job completed successfully."
      
      - name: Upload Error Log if Available
        if: ${{ github.event.inputs.log_errors == 'true' && needs.test-job.outputs.error_log_exists == 'true' }}
        uses: actions/upload-artifact@v3
        with:
          name: error_log
          path: error_logs/error_log.txt
