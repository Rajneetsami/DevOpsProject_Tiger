name: Test OpenWeatherMap API

on:
  workflow_dispatch:
    inputs:
      runTest:
        required: true
        type: boolean
        default: false
      logErrors:
        required: true
        type: boolean
        default: false

jobs:
  test_openweathermap_ubuntu:
    runs-on: ubuntu-latest

    steps:
      # Checkout code
      - name: Checkout code
        uses: actions/checkout@v3

      # Set up Python
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11.5'

      # Install dependencies
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      # Run unittest tests and capture output to log file
      - name: Run unittest tests
        if: ${{ github.event.inputs.runTest == 'true' }}
        id: run_unittest_tests
        env:
          API_KEY: ${{ secrets.API_KEY }}
        run: |
          python -m unittest discover -s . -p "unittest_herman.py" 2>&1 | tee unittest_error.log
          
      # Check if any tests failed
      - name: Check if any tests failed
        id: check_test_failures
        run: |
          if grep -q 'FAIL' unittest_error.log; then
            echo "Tests failed"
            exit 1
          fi

      # Start Flask app
      - name: Run Flask app
        env:
          FLASK_APP: "app.py"  # Replace with your actual app filename
          FLASK_ENV: development
        run: |
          nohup python -m flask run --host=0.0.0.0 &
          sleep 5  # Give the server a few seconds to start

      # Run integration test and capture output to log file
      - name: Run integration test
        id: run_integration_test
        env:
          API_KEY: ${{ secrets.API_KEY }}
        run: |
          python integrationtest_herman.py 2>&1 | tee integration_error.log
          
      # Check if integration tests failed
      - name: Check if integration test failed
        id: check_integration_failures
        run: |
          if grep -q 'FAIL' integration_error.log; then
            echo "Integration test failed"
            exit 1
          fi

      # Upload error logs if logErrors is true and there were test failures
      - name: Upload error logs
        if: ${{ github.event.inputs.logErrors == 'true' && (steps.check_test_failures.outcome == 'failure' || steps.check_integration_failures.outcome == 'failure') }}
        uses: actions/upload-artifact@v3
        with:
          name: error-logs
          path: |
            unittest_error.log
            integration_error.log

  build_and_publish_docker:
    runs-on: ubuntu-latest
    needs: test_openweathermap_ubuntu
    if: success()  # Only runs if all previous steps succeed
    steps:
      # Checkout code
      - name: Checkout code
        uses: actions/checkout@v3

      # Log in to Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      # Build Docker image
      - name: Build Docker image
        run: |
          docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/opwm-api:latest .

      # Push Docker image to Docker Hub
      - name: Push Docker image to Docker Hub
        run: |
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/opwm-api:latest
